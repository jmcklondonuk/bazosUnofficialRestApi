/**
 * Bazos.cz API
 * This is a REST API for bazos.cz
 *
 * The version of the OpenAPI document: v0.9.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Advertisement from '../model/Advertisement';
import Error from '../model/Error';
import UploadRequest from '../model/UploadRequest';

/**
* Advertisements service.
* @module api/AdvertisementsApi
* @version v0.9.2
*/
export default class AdvertisementsApi {

    /**
    * Constructs a new AdvertisementsApi. 
    * @alias module:api/AdvertisementsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteAdvertisement operation.
     * @callback module:api/AdvertisementsApi~deleteAdvertisementCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes your advertisement from bazos.cz
     * @param {String} url 
     * @param {String} password 
     * @param {module:api/AdvertisementsApi~deleteAdvertisementCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    deleteAdvertisement(url, password, callback) {
      let postBody = null;
      // verify the required parameter 'url' is set
      if (url === undefined || url === null) {
        throw new Error("Missing the required parameter 'url' when calling deleteAdvertisement");
      }
      // verify the required parameter 'password' is set
      if (password === undefined || password === null) {
        throw new Error("Missing the required parameter 'password' when calling deleteAdvertisement");
      }

      let pathParams = {
      };
      let queryParams = {
        'url': url,
        'password': password
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'Boolean';
      return this.apiClient.callApi(
        '/api/v1/delete-advertisement', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listOwnAdvertisements operation.
     * @callback module:api/AdvertisementsApi~listOwnAdvertisementsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Advertisement>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads your own advertisements from bazos.cz including photos
     * @param {String} email 
     * @param {String} phone 
     * @param {String} password 
     * @param {Boolean} downloadPhotos 
     * @param {module:api/AdvertisementsApi~listOwnAdvertisementsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Advertisement>}
     */
    listOwnAdvertisements(email, phone, password, downloadPhotos, callback) {
      let postBody = null;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling listOwnAdvertisements");
      }
      // verify the required parameter 'phone' is set
      if (phone === undefined || phone === null) {
        throw new Error("Missing the required parameter 'phone' when calling listOwnAdvertisements");
      }
      // verify the required parameter 'password' is set
      if (password === undefined || password === null) {
        throw new Error("Missing the required parameter 'password' when calling listOwnAdvertisements");
      }
      // verify the required parameter 'downloadPhotos' is set
      if (downloadPhotos === undefined || downloadPhotos === null) {
        throw new Error("Missing the required parameter 'downloadPhotos' when calling listOwnAdvertisements");
      }

      let pathParams = {
        'email': email,
        'phone': phone,
        'password': password,
        'downloadPhotos': downloadPhotos
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Advertisement];
      return this.apiClient.callApi(
        '/api/v1/list-own-advertisements/{email}/{phone}/{password}/{downloadPhotos}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the scrapeOwnAdvertisement operation.
     * @callback module:api/AdvertisementsApi~scrapeOwnAdvertisementCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Advertisement} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Scrapes your own advertisement from bazos.cz including photos
     * @param {String} url 
     * @param {String} password 
     * @param {Boolean} downloadPhotos 
     * @param {module:api/AdvertisementsApi~scrapeOwnAdvertisementCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Advertisement}
     */
    scrapeOwnAdvertisement(url, password, downloadPhotos, callback) {
      let postBody = null;
      // verify the required parameter 'url' is set
      if (url === undefined || url === null) {
        throw new Error("Missing the required parameter 'url' when calling scrapeOwnAdvertisement");
      }
      // verify the required parameter 'password' is set
      if (password === undefined || password === null) {
        throw new Error("Missing the required parameter 'password' when calling scrapeOwnAdvertisement");
      }
      // verify the required parameter 'downloadPhotos' is set
      if (downloadPhotos === undefined || downloadPhotos === null) {
        throw new Error("Missing the required parameter 'downloadPhotos' when calling scrapeOwnAdvertisement");
      }

      let pathParams = {
      };
      let queryParams = {
        'url': url,
        'password': password,
        'downloadPhotos': downloadPhotos
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Advertisement;
      return this.apiClient.callApi(
        '/api/v1/scrape-own-advertisement', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uploadAdvertisement operation.
     * @callback module:api/AdvertisementsApi~uploadAdvertisementCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Uploads an advertisement to bazos.cz
     * @param {module:model/UploadRequest} uploadRequest 
     * @param {module:api/AdvertisementsApi~uploadAdvertisementCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    uploadAdvertisement(uploadRequest, callback) {
      let postBody = uploadRequest;
      // verify the required parameter 'uploadRequest' is set
      if (uploadRequest === undefined || uploadRequest === null) {
        throw new Error("Missing the required parameter 'uploadRequest' when calling uploadAdvertisement");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/v1/upload-advertisement', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
