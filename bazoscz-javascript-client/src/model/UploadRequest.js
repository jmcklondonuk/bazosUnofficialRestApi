/**
 * Bazos.cz API
 * This is a REST API for bazos.cz
 *
 * The version of the OpenAPI document: v0.9.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Advertisement from './Advertisement';
import Seller from './Seller';

/**
 * The UploadRequest model module.
 * @module model/UploadRequest
 * @version v0.9.2
 */
class UploadRequest {
    /**
     * Constructs a new <code>UploadRequest</code>.
     * @alias module:model/UploadRequest
     */
    constructor() { 
        
        UploadRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UploadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadRequest} obj Optional instance to populate.
     * @return {module:model/UploadRequest} The populated <code>UploadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadRequest();

            if (data.hasOwnProperty('bid')) {
                obj['bid'] = ApiClient.convertToType(data['bid'], 'String');
            }
            if (data.hasOwnProperty('bkod')) {
                obj['bkod'] = ApiClient.convertToType(data['bkod'], 'String');
            }
            if (data.hasOwnProperty('advertisement')) {
                obj['advertisement'] = Advertisement.constructFromObject(data['advertisement']);
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = Seller.constructFromObject(data['seller']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bid'] && !(typeof data['bid'] === 'string' || data['bid'] instanceof String)) {
            throw new Error("Expected the field `bid` to be a primitive type in the JSON string but got " + data['bid']);
        }
        // ensure the json data is a string
        if (data['bkod'] && !(typeof data['bkod'] === 'string' || data['bkod'] instanceof String)) {
            throw new Error("Expected the field `bkod` to be a primitive type in the JSON string but got " + data['bkod']);
        }
        // validate the optional field `advertisement`
        if (data['advertisement']) { // data not null
          Advertisement.validateJSON(data['advertisement']);
        }
        // validate the optional field `seller`
        if (data['seller']) { // data not null
          Seller.validateJSON(data['seller']);
        }

        return true;
    }


}



/**
 * @member {String} bid
 */
UploadRequest.prototype['bid'] = undefined;

/**
 * @member {String} bkod
 */
UploadRequest.prototype['bkod'] = undefined;

/**
 * @member {module:model/Advertisement} advertisement
 */
UploadRequest.prototype['advertisement'] = undefined;

/**
 * @member {module:model/Seller} seller
 */
UploadRequest.prototype['seller'] = undefined;






export default UploadRequest;

