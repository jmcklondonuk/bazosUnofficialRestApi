/**
 * Bazos.cz API
 * This is a REST API for bazos.cz
 *
 * The version of the OpenAPI document: v0.9.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Seller model module.
 * @module model/Seller
 * @version v0.9.2
 */
class Seller {
    /**
     * Constructs a new <code>Seller</code>.
     * @alias module:model/Seller
     */
    constructor() { 
        
        Seller.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Seller</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Seller} obj Optional instance to populate.
     * @return {module:model/Seller} The populated <code>Seller</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Seller();

            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('adSellerName')) {
                obj['adSellerName'] = ApiClient.convertToType(data['adSellerName'], 'String');
            }
            if (data.hasOwnProperty('adPhone')) {
                obj['adPhone'] = ApiClient.convertToType(data['adPhone'], 'String');
            }
            if (data.hasOwnProperty('adEmail')) {
                obj['adEmail'] = ApiClient.convertToType(data['adEmail'], 'String');
            }
            if (data.hasOwnProperty('adZip')) {
                obj['adZip'] = ApiClient.convertToType(data['adZip'], 'String');
            }
            if (data.hasOwnProperty('adPassword')) {
                obj['adPassword'] = ApiClient.convertToType(data['adPassword'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Seller</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Seller</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['adSellerName'] && !(typeof data['adSellerName'] === 'string' || data['adSellerName'] instanceof String)) {
            throw new Error("Expected the field `adSellerName` to be a primitive type in the JSON string but got " + data['adSellerName']);
        }
        // ensure the json data is a string
        if (data['adPhone'] && !(typeof data['adPhone'] === 'string' || data['adPhone'] instanceof String)) {
            throw new Error("Expected the field `adPhone` to be a primitive type in the JSON string but got " + data['adPhone']);
        }
        // ensure the json data is a string
        if (data['adEmail'] && !(typeof data['adEmail'] === 'string' || data['adEmail'] instanceof String)) {
            throw new Error("Expected the field `adEmail` to be a primitive type in the JSON string but got " + data['adEmail']);
        }
        // ensure the json data is a string
        if (data['adZip'] && !(typeof data['adZip'] === 'string' || data['adZip'] instanceof String)) {
            throw new Error("Expected the field `adZip` to be a primitive type in the JSON string but got " + data['adZip']);
        }
        // ensure the json data is a string
        if (data['adPassword'] && !(typeof data['adPassword'] === 'string' || data['adPassword'] instanceof String)) {
            throw new Error("Expected the field `adPassword` to be a primitive type in the JSON string but got " + data['adPassword']);
        }

        return true;
    }


}



/**
 * @member {String} phone
 */
Seller.prototype['phone'] = undefined;

/**
 * @member {String} email
 */
Seller.prototype['email'] = undefined;

/**
 * @member {String} adSellerName
 */
Seller.prototype['adSellerName'] = undefined;

/**
 * @member {String} adPhone
 */
Seller.prototype['adPhone'] = undefined;

/**
 * @member {String} adEmail
 */
Seller.prototype['adEmail'] = undefined;

/**
 * @member {String} adZip
 */
Seller.prototype['adZip'] = undefined;

/**
 * @member {String} adPassword
 */
Seller.prototype['adPassword'] = undefined;






export default Seller;

